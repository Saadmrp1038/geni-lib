#!/usr/bin/env python
# Copyright (c) 2015-2016  Barnstormer Softworks, Ltd.

import os
import os.path
import code

class Shell(object):
  def __init__ (self, debug = False):
    super(Shell, self).__init__()
    self.debug = debug

  def run (self, options):
    imports = {}

    try:
      import readline
    except ImportError:
      pass
    else:
      import rlcompleter
      readline.set_completer(rlcompleter.Completer(imports).complete)
      readline.parse_and_bind("tab:complete")

    # We want to honor both $PYTHONSTARTUP and .pythonrc.py, so follow system
    # conventions and get $PYTHONSTARTUP first then .pythonrc.py.
    for pythonrc in (os.environ.get("PYTHONSTARTUP"), '~/.pythonrc.py'):
      if not pythonrc:
        continue
      pythonrc = os.path.expanduser(pythonrc)
      if not os.path.isfile(pythonrc):
        continue
      try:
        with open(pythonrc) as handle:
          exec(compile(handle.read(), pythonrc, 'exec'), imports)
      except NameError:
        pass

    import geni.util
    import geni.rspec.pg
    import geni.rspec.vts
    import geni.rspec.igext
    import geni.rspec.egext
    import geni.rspec.igutil
    import geni.aggregate.frameworks
    import geni.aggregate.instageni
    import geni.aggregate.vts
    import geni.aggregate.exogeni
    import geni.aggregate.cloudlab
    import geni.aggregate.transit
    import pprint

    imports["util"] = geni.util
    imports["PG"] = geni.rspec.pg
    imports["VTS"] = geni.rspec.vts
    imports["IGAM"] = geni.aggregate.instageni
    imports["VTSAM"] = geni.aggregate.vts
    imports["EGAM"] = geni.aggregate.exogeni
    imports["CLAM"] = geni.aggregate.cloudlab
    imports["TRANSITAM"] = geni.aggregate.transit
    imports["IGX"] = geni.rspec.igext
    imports["EGX"] = geni.rspec.egext
    imports["IGUtil"] = geni.rspec.igutil
    imports["PP"] = pprint.pprint
    imports["RegM"] = geni.aggregate.frameworks.MemberRegistry

    if self.debug:
      import geni.minigcf.chapi2
      import geni.minigcf.amapi2
      import geni.minigcf.config
      imports["CH2"] = geni.minigcf.chapi2
      imports["AM2"] = geni.minigcf.amapi2
      imports["CFG"] = geni.minigcf.config

    try:
      if geni.util.hasDataContext():
        import getpass
        passwd = getpass.getpass("Private key passphrase: ")
        imports["context"] = geni.util.loadContext(key_passphrase=passwd)
    except IOError:
      pass

    code.interact(banner="GENI-Lib Interactive Shell", local=imports)

if __name__ == '__main__':
  import sys
  sys.path.insert(0, os.path.realpath(os.path.curdir))
  if len(sys.argv) > 1:
    if sys.argv[1] == "--debug":
      s = Shell(debug = True)
    else:
      sys.exit(1)
  else:
    s = Shell()
  s.run(None)
